/*
  This file is bundled by esbuild from src/main.ts.
  Edit the source files instead of dist/main.js.
*/

var f=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var D=Object.prototype.hasOwnProperty;var b=(u,r)=>{for(var t in r)f(u,t,{get:r[t],enumerable:!0})},S=(u,r,t,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of v(r))!D.call(u,i)&&i!==t&&f(u,i,{get:()=>r[i],enumerable:!(e=P(r,i))||e.enumerable});return u};var C=u=>S(f({},"__esModule",{value:!0}),u);var N={};b(N,{default:()=>y});module.exports=C(N);var n=require("obsidian"),L=()=>{var r;let u=null;if(typeof require=="function")u=require;else if(typeof window!="undefined"){let t=window.require;typeof t=="function"&&(u=t)}else if(typeof globalThis!="undefined"){let t=globalThis.require;typeof t=="function"&&(u=t)}if(!u)return{fs:null,path:null,os:null};try{let t=u("fs"),e=u("path"),i=u("os");return{fs:(r=t==null?void 0:t.promises)!=null?r:null,path:e!=null?e:null,os:i!=null?i:null}}catch(t){return console.error("Daily Link Clipper could not load Node adapters",t),{fs:null,path:null,os:null}}},m=L(),k={dailyFolder:"Daily",dailyFileDateFormat:"YYYY-MM-DD",clipFolder:"Attachments/Clippings",wishlistBasePath:"Bases/Wishlist.base",readingListBasePath:"Bases/ReadingList.base",openRouterApiKey:"",openRouterKeyPath:"",openRouterModel:"anthropic/claude-3.5-sonnet",fetchTimeoutSeconds:20,modifyDebounceMs:1500,maxCharactersFromPage:2e3,processedLinks:{},classificationFallback:"article"},F=120,x=500,y=class extends n.Plugin{constructor(){super(...arguments);this.settings=k;this.debounceHandles=new Map;this.keyFileErrorNotified=!1;this.keyFileEmptyNotified=!1;this.keyFileUnsupportedNotified=!1}async onload(){await this.loadSettings(),this.addSettingTab(new w(this.app,this)),this.registerEvent(this.app.vault.on("modify",t=>this.onFileModify(t))),this.addCommand({id:"process-todays-daily-links",name:"Process today's daily links",callback:async()=>{let t=this.getTodayDailyFile();t?(await this.processDailyFile(t),new n.Notice("Daily Link Clipper finished processing the current daily note.")):new n.Notice("Daily Link Clipper could not find today's daily note.")}}),this.addCommand({id:"process-all-daily-links",name:"Process all daily links",callback:async()=>{await this.processAllDailyNotes(),new n.Notice("Daily Link Clipper finished processing all daily notes.")}}),await this.processAllDailyNotes()}onunload(){this.debounceHandles.forEach(t=>window.clearTimeout(t)),this.debounceHandles.clear()}async loadSettings(){let t=await this.loadData();this.settings=Object.assign({},k,t!=null?t:{}),this.settings.processedLinks||(this.settings.processedLinks={})}async saveSettings(){await this.saveData(this.settings)}getTodayDailyPath(){let t=`${(0,n.moment)().format(this.settings.dailyFileDateFormat)}.md`;return(0,n.normalizePath)(`${this.settings.dailyFolder}/${t}`)}getTodayDailyFile(){let t=this.getTodayDailyPath(),e=this.app.vault.getAbstractFileByPath(t);return e instanceof n.TFile?e:null}getDailyFolderPath(){return(0,n.normalizePath)(this.settings.dailyFolder||"")}getAllDailyNoteFiles(){let t=this.getDailyFolderPath();if(!t)return[];let e=t.endsWith("/")?t:`${t}/`;return this.app.vault.getFiles().filter(i=>i.extension==="md").filter(i=>{let a=(0,n.normalizePath)(i.path);return a===t||a.startsWith(e)}).sort((i,a)=>i.path.localeCompare(a.path))}async processAllDailyNotes(){let t=this.getAllDailyNoteFiles();for(let e of t)try{await this.processDailyFile(e)}catch(i){console.error("Daily Link Clipper failed while processing daily note",e.path,i)}}getParentFolder(t){if(!t)return"";let e=(0,n.normalizePath)(t),i=e.lastIndexOf("/");return i===-1?"":e.substring(0,i)}getVaultBasePath(){var e;let t=(e=this.app.vault)==null?void 0:e.adapter;return t!=null&&t.getBasePath?t.getBasePath():t!=null&&t.basePath?t.basePath:null}resolveKeyPath(t){if(!t)return null;let e=t.trim();if(!e)return null;let i=m.path,a=m.os;if(e.startsWith("~")){if(!i||!a)return null;e=i.join(a.homedir(),e.slice(1))}if(i&&!i.isAbsolute(e)){let s=this.getVaultBasePath();s&&(e=i.resolve(s,e))}return e}async getOpenRouterApiKey(){var e;if(typeof process!="undefined"&&(process!=null&&process.env)){let i=["OPENROUTER_API_KEY","OPENROUTERKEY"];for(let a of i){let s=process.env[a];if(s!=null&&s.trim())return s.trim()}}let t=(e=this.settings.openRouterKeyPath)==null?void 0:e.trim();if(t){let i=this.resolveKeyPath(t);if(!i)return this.keyFileUnsupportedNotified||(new n.Notice("Daily Link Clipper: key file path is not supported on this platform."),this.keyFileUnsupportedNotified=!0),this.settings.openRouterApiKey.trim();let a=m.fs;if(!a)this.keyFileUnsupportedNotified||(new n.Notice("Daily Link Clipper: key file access is unavailable on this platform."),this.keyFileUnsupportedNotified=!0);else try{let s=(await a.readFile(i,"utf8")).trim();if(s)return s;this.keyFileEmptyNotified||(new n.Notice("Daily Link Clipper: OpenRouter key file is empty."),this.keyFileEmptyNotified=!0)}catch(s){console.error("Daily Link Clipper could not read OpenRouter key file",s),this.keyFileErrorNotified||(new n.Notice("Daily Link Clipper could not read the OpenRouter key file. Check console for details."),this.keyFileErrorNotified=!0)}}return this.settings.openRouterApiKey.trim()}onFileModify(t){if(!(t instanceof n.TFile)||t.extension!=="md")return;let e=this.getTodayDailyPath();if((0,n.normalizePath)(t.path)!==e)return;let i=this.debounceHandles.get(t.path);i&&window.clearTimeout(i);let a=window.setTimeout(async()=>{await this.processDailyFile(t)},this.settings.modifyDebounceMs);this.debounceHandles.set(t.path,a)}async processDailyFile(t){var l,c;let e=await this.app.vault.read(t),i=this.extractLinks(e),a=(l=this.settings.processedLinks)[c=t.path]||(l[c]=[]),s=new Set(a),o=i.filter(p=>!s.has(p));if(o.length)for(let p of o)try{await this.handleLink(p,t),a.push(p),await this.saveSettings()}catch(d){console.error("Daily Link Clipper failed to process link",p,d),new n.Notice(`Failed to process link: ${p}`)}}extractLinks(t){let e=new Set,i=/\[[^\]]*\]\((https?:\/\/[^\s)]+)\)/g,a=/(https?:\/\/[^\s<>()"']+)/g,s;for(;(s=i.exec(t))!==null;)e.add(s[1]);for(;(s=a.exec(t))!==null;)e.add(s[1]);return Array.from(e)}async handleLink(t,e){new n.Notice(`Clipping ${t}`);let i=await this.fetchPage(t),a=this.extractMetadata(t,i),s=await this.classifyLink(a),o=this.buildNoteContent(a,s,e.path),l=await this.createClippingNote(a,o);await this.appendToBase(s,a,l),new n.Notice(`Saved clip for ${a.title||t}`)}async fetchPage(t){var e;try{let i=await(0,n.requestUrl)({url:t,method:"GET",headers:{"User-Agent":"ObsidianDailyLinkClipper/0.1"}});return{status:i.status,html:(e=i.text)!=null?e:""}}catch(i){return console.error("Daily Link Clipper fetch failed",i),{status:500,html:""}}}extractMetadata(t,e){var a,s;let i={url:t,title:t,description:"",text:"",status:e.status};if(e.html)try{let o=typeof DOMParser!="undefined"?new DOMParser:null,l=o?o.parseFromString(e.html,"text/html"):null;if(l){let c=l.querySelector("title");c!=null&&c.textContent&&(i.title=this.truncate(c.textContent.trim(),F));let p=l.querySelector('meta[name="description"], meta[property="og:description"]'),d=p==null?void 0:p.getAttribute("content");d&&(i.description=this.truncate(d.trim(),x));let h=(s=(a=l.body)==null?void 0:a.innerText)!=null?s:"";if(h){let g=h.replace(/\s+/g," ").trim();i.text=this.truncate(g,this.settings.maxCharactersFromPage)}}}catch(o){console.error("Daily Link Clipper could not parse HTML",o)}return i.title||(i.title=this.truncate(t,F)),i.description||(i.description=""),i.text||(i.text=""),i}async classifyLink(t){var i,a,s,o,l;let e=await this.getOpenRouterApiKey();if(e)try{let c=this.composeClassificationPrompt(t),p=await(0,n.requestUrl)({url:"https://openrouter.ai/api/v1/chat/completions",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:this.settings.openRouterModel,messages:[{role:"system",content:"Classify the provided webpage as product or article. Respond with just the lowercase label."},{role:"user",content:c}],temperature:0})}),d=JSON.parse((i=p.text)!=null?i:"{}"),h=(l=(o=(s=(a=d==null?void 0:d.choices)==null?void 0:a[0])==null?void 0:s.message)==null?void 0:o.content)==null?void 0:l.trim().toLowerCase();if(h==="product"||h==="article")return h}catch(c){console.error("Daily Link Clipper classification failed",c)}return this.heuristicClassification(t)}composeClassificationPrompt(t){return`${[`URL: ${t.url}`,t.title?`Title: ${t.title}`:"",t.description?`Description: ${t.description}`:"",t.text?`Excerpt: ${t.text.slice(0,400)}`:""].filter(Boolean).join(`
`)}

Respond with either "product" or "article".`}heuristicClassification(t){let e=["product","buy","store","shop","cart","price","sale"],i=this.tryParseHost(t.url),a=`${t.title} ${t.description}`.toLowerCase();return i&&/amazon|etsy|ebay|aliexpress|ikea|nike|store|shop/.test(i)||e.some(s=>a.includes(s))||this.settings.classificationFallback==="product"?"product":"article"}tryParseHost(t){try{return new URL(t).host.toLowerCase()}catch(e){return null}}formatFrontmatterValue(t){if(t==null)return'""';let e=typeof t!="string"?String(t):t;return e.length?JSON.stringify(e):'""'}truncate(t,e){return!t||!e||t.length<=e?t||"":`${t.slice(0,e-1)}\u2026`}buildNoteContent(t,e,i){let a=(0,n.moment)().format("YYYY-MM-DD HH:mm"),s=[];s.push("---"),s.push(`title: ${this.formatFrontmatterValue(t.title||t.url)}`),s.push(`source: ${this.formatFrontmatterValue(t.url)}`),s.push(`captured: ${this.formatFrontmatterValue(a)}`),s.push(`category: ${this.formatFrontmatterValue(e)}`),s.push(`origin: ${this.formatFrontmatterValue(i)}`),s.push("---");let o=(t.title||t.url).replace(/\s+/g," ").trim();return s.push(""),s.push(`# ${o}`),t.description&&(s.push(""),s.push(`> ${t.description}`)),t.text&&(s.push(""),s.push(t.text)),s.push(""),s.push(`Original link: ${t.url}`),s.join(`
`)}sanitizeFileName(t){return t.replace(/[\\/:*?"<>|#]/g," ").replace(/\s+/g," ").trim().slice(0,80)||"clipped-link"}async ensureFolderExists(t){let e=(0,n.normalizePath)(t).split("/"),i=e.shift();if(!i)return;let a=i,s=this.app.vault;for(s.getAbstractFileByPath(a)||await s.createFolder(a);e.length;){let o=e.shift();if(!o)continue;a=`${a}/${o}`,s.getAbstractFileByPath(a)||await s.createFolder(a)}}async createClippingNote(t,e){let i=(0,n.normalizePath)(this.settings.clipFolder);await this.ensureFolderExists(i);let a=this.sanitizeFileName(t.title||t.url),s=0;for(;s<100;){let o=s===0?"":`-${s}`,l=(0,n.normalizePath)(`${i}/${a}${o}.md`),c=this.app.vault.getAbstractFileByPath(l);if(c instanceof n.TFile){try{if((await this.app.vault.read(c)).includes(t.url))return await this.app.vault.modify(c,e),l}catch(p){console.error("Daily Link Clipper could not read existing clip",p)}s+=1;continue}return await this.app.vault.create(l,e),l}throw new Error("Daily Link Clipper could not create a unique clipping note name.")}async appendToBase(t,e,i){let a={title:e.title,url:e.url,clippedNote:i,captured:(0,n.moment)().format(),status:t==="product"?"wishlist":"to-read"},s=t==="product"?this.settings.wishlistBasePath:this.settings.readingListBasePath,o=(0,n.normalizePath)(s),l=this.getParentFolder(o);l&&await this.ensureFolderExists(l);let c=this.app.vault.getAbstractFileByPath(o);if(!(c instanceof n.TFile)){let p=JSON.stringify({entries:[a]},null,2);await this.app.vault.create(o,`${p}
`);return}try{let p=await this.app.vault.read(c),d;try{d=JSON.parse(p)}catch(g){d={entries:[]}}Array.isArray(d.entries)||(d.entries=[]),d.entries.some(g=>g.url===a.url)||(d.entries.push(a),await this.app.vault.modify(c,`${JSON.stringify(d,null,2)}
`))}catch(p){console.error("Daily Link Clipper could not update base file",p)}}get pluginSettings(){return this.settings}},w=class extends n.PluginSettingTab{constructor(r,t){super(r,t),this.plugin=t}display(){let{containerEl:r}=this;r.empty(),r.createEl("h2",{text:"Daily Link Clipper"}),new n.Setting(r).setName("Daily folder").setDesc("Relative path that holds daily notes.").addText(t=>t.setPlaceholder("Daily").setValue(this.plugin.pluginSettings.dailyFolder).onChange(async e=>{this.plugin.pluginSettings.dailyFolder=e.trim()||"Daily",await this.plugin.saveSettings()})),new n.Setting(r).setName("Daily file date format").setDesc("Moment.js format for the daily file name.").addText(t=>t.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.pluginSettings.dailyFileDateFormat).onChange(async e=>{this.plugin.pluginSettings.dailyFileDateFormat=e.trim()||"YYYY-MM-DD",await this.plugin.saveSettings()})),new n.Setting(r).setName("Clip folder").setDesc("Folder where clipped notes should be stored.").addText(t=>t.setPlaceholder("Attachments/Clippings").setValue(this.plugin.pluginSettings.clipFolder).onChange(async e=>{this.plugin.pluginSettings.clipFolder=e.trim()||"Attachments/Clippings",await this.plugin.saveSettings()})),new n.Setting(r).setName("Wishlist base path").setDesc("File that stores JSON entries for products.").addText(t=>t.setPlaceholder("Bases/Wishlist.base").setValue(this.plugin.pluginSettings.wishlistBasePath).onChange(async e=>{this.plugin.pluginSettings.wishlistBasePath=e.trim()||"Bases/Wishlist.base",await this.plugin.saveSettings()})),new n.Setting(r).setName("Reading list base path").setDesc("File that stores JSON entries for articles.").addText(t=>t.setPlaceholder("Bases/ReadingList.base").setValue(this.plugin.pluginSettings.readingListBasePath).onChange(async e=>{this.plugin.pluginSettings.readingListBasePath=e.trim()||"Bases/ReadingList.base",await this.plugin.saveSettings()})),new n.Setting(r).setName("OpenRouter API key").setDesc("Stored locally. Required for model-based classification. Leave blank to use heuristics.").addText(t=>t.setPlaceholder("sk-or-...").setValue(this.plugin.pluginSettings.openRouterApiKey).onChange(async e=>{this.plugin.pluginSettings.openRouterApiKey=e.trim(),await this.plugin.saveSettings()})),new n.Setting(r).setName("OpenRouter key file path").setDesc("Optional absolute or vault-relative path to a file containing the API key. Tilde (~/) is supported.").addText(t=>t.setPlaceholder("~/secrets/openrouter.key").setValue(this.plugin.pluginSettings.openRouterKeyPath).onChange(async e=>{this.plugin.pluginSettings.openRouterKeyPath=e.trim(),await this.plugin.saveSettings()})),new n.Setting(r).setName("OpenRouter model").setDesc("Model identifier for classification requests.").addText(t=>t.setPlaceholder("anthropic/claude-3.5-sonnet").setValue(this.plugin.pluginSettings.openRouterModel).onChange(async e=>{this.plugin.pluginSettings.openRouterModel=e.trim()||"anthropic/claude-3.5-sonnet",await this.plugin.saveSettings()})),new n.Setting(r).setName("Fetch timeout (seconds)").setDesc("Maximum time to wait when downloading a page or calling OpenRouter.").addSlider(t=>t.setLimits(5,60,1).setValue(this.plugin.pluginSettings.fetchTimeoutSeconds).onChange(async e=>{this.plugin.pluginSettings.fetchTimeoutSeconds=e,await this.plugin.saveSettings()}).setDynamicTooltip()),new n.Setting(r).setName("Modify debounce (ms)").setDesc("Delay after edits before processing the daily note again.").addSlider(t=>t.setLimits(250,5e3,50).setValue(this.plugin.pluginSettings.modifyDebounceMs).onChange(async e=>{this.plugin.pluginSettings.modifyDebounceMs=e,await this.plugin.saveSettings()}).setDynamicTooltip()),new n.Setting(r).setName("Fallback classification").setDesc("Used when OpenRouter is unavailable and heuristics are inconclusive.").addDropdown(t=>t.addOption("article","Article").addOption("product","Product").setValue(this.plugin.pluginSettings.classificationFallback).onChange(async e=>{this.plugin.pluginSettings.classificationFallback=e,await this.plugin.saveSettings()}))}};
