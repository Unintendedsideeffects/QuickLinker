/*
  This file is bundled by esbuild from src/main.ts.
  Edit the source files instead of dist/main.js.
*/

var S=Object.create;var f=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var R=(u,r)=>{for(var t in r)f(u,t,{get:r[t],enumerable:!0})},F=(u,r,t,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let i of C(r))!T.call(u,i)&&i!==t&&f(u,i,{get:()=>r[i],enumerable:!(e=L(r,i))||e.enumerable});return u};var P=(u,r,t)=>(t=u!=null?S(x(u)):{},F(r||!u||!u.__esModule?f(t,"default",{value:u,enumerable:!0}):t,u)),M=u=>F(f({},"__esModule",{value:!0}),u);var A={};R(A,{default:()=>m});module.exports=M(A);var n=require("obsidian"),D=require("fs"),g=P(require("path")),b=P(require("os")),v={dailyFolder:"Daily",dailyFileDateFormat:"YYYY-MM-DD",clipFolder:"Attachments/Clippings",wishlistBasePath:"Bases/Wishlist.base",readingListBasePath:"Bases/ReadingList.base",openRouterApiKey:"",openRouterKeyPath:"",openRouterModel:"anthropic/claude-3.5-sonnet",fetchTimeoutSeconds:20,modifyDebounceMs:1500,maxCharactersFromPage:2e3,processedLinks:{},classificationFallback:"article"},k=120,N=500,m=class extends n.Plugin{constructor(){super(...arguments);this.settings=v;this.debounceHandles=new Map;this.keyFileErrorNotified=!1;this.keyFileEmptyNotified=!1}async onload(){await this.loadSettings(),this.addSettingTab(new w(this.app,this)),this.registerEvent(this.app.vault.on("modify",e=>this.onFileModify(e))),this.addCommand({id:"process-todays-daily-links",name:"Process today's daily links",callback:async()=>{let e=this.getTodayDailyFile();e?(await this.processDailyFile(e),new n.Notice("Daily Link Clipper finished processing the current daily note.")):new n.Notice("Daily Link Clipper could not find today's daily note.")}});let t=this.getTodayDailyFile();t&&await this.processDailyFile(t)}onunload(){this.debounceHandles.forEach(t=>window.clearTimeout(t)),this.debounceHandles.clear()}async loadSettings(){let t=await this.loadData();this.settings=Object.assign({},v,t!=null?t:{}),this.settings.processedLinks||(this.settings.processedLinks={})}async saveSettings(){await this.saveData(this.settings)}getTodayDailyPath(){let t=`${(0,n.moment)().format(this.settings.dailyFileDateFormat)}.md`;return(0,n.normalizePath)(`${this.settings.dailyFolder}/${t}`)}getTodayDailyFile(){let t=this.getTodayDailyPath(),e=this.app.vault.getAbstractFileByPath(t);return e instanceof n.TFile?e:null}getParentFolder(t){if(!t)return"";let e=(0,n.normalizePath)(t),i=e.lastIndexOf("/");return i===-1?"":e.substring(0,i)}getVaultBasePath(){var e;let t=(e=this.app.vault)==null?void 0:e.adapter;return t!=null&&t.getBasePath?t.getBasePath():t!=null&&t.basePath?t.basePath:null}resolveKeyPath(t){if(!t)return null;let e=t.trim();if(!e)return null;if(e.startsWith("~")&&(e=g.join(b.homedir(),e.slice(1))),!g.isAbsolute(e)){let i=this.getVaultBasePath();i&&(e=g.resolve(i,e))}return e}async getOpenRouterApiKey(){var e;if(typeof process!="undefined"&&(process!=null&&process.env)){let i=["OPENROUTER_API_KEY","OPENROUTERKEY"];for(let a of i){let s=process.env[a];if(s!=null&&s.trim())return s.trim()}}let t=(e=this.settings.openRouterKeyPath)==null?void 0:e.trim();if(t){let i=this.resolveKeyPath(t);if(i)try{let a=(await D.promises.readFile(i,"utf8")).trim();if(a)return a;this.keyFileEmptyNotified||(new n.Notice("Daily Link Clipper: OpenRouter key file is empty."),this.keyFileEmptyNotified=!0)}catch(a){console.error("Daily Link Clipper could not read OpenRouter key file",a),this.keyFileErrorNotified||(new n.Notice("Daily Link Clipper could not read the OpenRouter key file. Check console for details."),this.keyFileErrorNotified=!0)}}return this.settings.openRouterApiKey.trim()}onFileModify(t){if(!(t instanceof n.TFile)||t.extension!=="md")return;let e=this.getTodayDailyPath();if((0,n.normalizePath)(t.path)!==e)return;let i=this.debounceHandles.get(t.path);i&&window.clearTimeout(i);let a=window.setTimeout(async()=>{await this.processDailyFile(t)},this.settings.modifyDebounceMs);this.debounceHandles.set(t.path,a)}async processDailyFile(t){var l,p;let e=await this.app.vault.read(t),i=this.extractLinks(e),a=(l=this.settings.processedLinks)[p=t.path]||(l[p]=[]),s=new Set(a),o=i.filter(c=>!s.has(c));if(o.length)for(let c of o)try{await this.handleLink(c,t),a.push(c),await this.saveSettings()}catch(h){console.error("Daily Link Clipper failed to process link",c,h),new n.Notice(`Failed to process link: ${c}`)}}extractLinks(t){let e=new Set,i=/\[[^\]]*\]\((https?:\/\/[^\s)]+)\)/g,a=/(https?:\/\/[^\s<>()"']+)/g,s;for(;(s=i.exec(t))!==null;)e.add(s[1]);for(;(s=a.exec(t))!==null;)e.add(s[1]);return Array.from(e)}async handleLink(t,e){new n.Notice(`Clipping ${t}`);let i=await this.fetchPage(t),a=this.extractMetadata(t,i),s=await this.classifyLink(a),o=this.buildNoteContent(a,s,e.path),l=await this.createClippingNote(a,o);await this.appendToBase(s,a,l),new n.Notice(`Saved clip for ${a.title||t}`)}async fetchPage(t){var e;try{let i=await(0,n.requestUrl)({url:t,method:"GET",headers:{"User-Agent":"ObsidianDailyLinkClipper/0.1"}});return{status:i.status,html:(e=i.text)!=null?e:""}}catch(i){return console.error("Daily Link Clipper fetch failed",i),{status:500,html:""}}}extractMetadata(t,e){var a,s;let i={url:t,title:t,description:"",text:"",status:e.status};if(e.html)try{let o=typeof DOMParser!="undefined"?new DOMParser:null,l=o?o.parseFromString(e.html,"text/html"):null;if(l){let p=l.querySelector("title");p!=null&&p.textContent&&(i.title=this.truncate(p.textContent.trim(),k));let c=l.querySelector('meta[name="description"], meta[property="og:description"]'),h=c==null?void 0:c.getAttribute("content");h&&(i.description=this.truncate(h.trim(),N));let d=(s=(a=l.body)==null?void 0:a.innerText)!=null?s:"";if(d){let y=d.replace(/\s+/g," ").trim();i.text=this.truncate(y,this.settings.maxCharactersFromPage)}}}catch(o){console.error("Daily Link Clipper could not parse HTML",o)}return i.title||(i.title=this.truncate(t,k)),i.description||(i.description=""),i.text||(i.text=""),i}async classifyLink(t){var i,a,s,o,l;let e=await this.getOpenRouterApiKey();if(e)try{let p=this.composeClassificationPrompt(t),c=await(0,n.requestUrl)({url:"https://openrouter.ai/api/v1/chat/completions",method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:this.settings.openRouterModel,messages:[{role:"system",content:"Classify the provided webpage as product or article. Respond with just the lowercase label."},{role:"user",content:p}],temperature:0})}),h=JSON.parse((i=c.text)!=null?i:"{}"),d=(l=(o=(s=(a=h==null?void 0:h.choices)==null?void 0:a[0])==null?void 0:s.message)==null?void 0:o.content)==null?void 0:l.trim().toLowerCase();if(d==="product"||d==="article")return d}catch(p){console.error("Daily Link Clipper classification failed",p)}return this.heuristicClassification(t)}composeClassificationPrompt(t){return`${[`URL: ${t.url}`,t.title?`Title: ${t.title}`:"",t.description?`Description: ${t.description}`:"",t.text?`Excerpt: ${t.text.slice(0,400)}`:""].filter(Boolean).join(`
`)}

Respond with either "product" or "article".`}heuristicClassification(t){let e=["product","buy","store","shop","cart","price","sale"],i=this.tryParseHost(t.url),a=`${t.title} ${t.description}`.toLowerCase();return i&&/amazon|etsy|ebay|aliexpress|ikea|nike|store|shop/.test(i)||e.some(s=>a.includes(s))||this.settings.classificationFallback==="product"?"product":"article"}tryParseHost(t){try{return new URL(t).host.toLowerCase()}catch(e){return null}}formatFrontmatterValue(t){if(t==null)return'""';let e=typeof t!="string"?String(t):t;return e.length?JSON.stringify(e):'""'}truncate(t,e){return!t||!e||t.length<=e?t||"":`${t.slice(0,e-1)}\u2026`}buildNoteContent(t,e,i){let a=(0,n.moment)().format("YYYY-MM-DD HH:mm"),s=[];s.push("---"),s.push(`title: ${this.formatFrontmatterValue(t.title||t.url)}`),s.push(`source: ${this.formatFrontmatterValue(t.url)}`),s.push(`captured: ${this.formatFrontmatterValue(a)}`),s.push(`category: ${this.formatFrontmatterValue(e)}`),s.push(`origin: ${this.formatFrontmatterValue(i)}`),s.push("---");let o=(t.title||t.url).replace(/\s+/g," ").trim();return s.push(""),s.push(`# ${o}`),t.description&&(s.push(""),s.push(`> ${t.description}`)),t.text&&(s.push(""),s.push(t.text)),s.push(""),s.push(`Original link: ${t.url}`),s.join(`
`)}sanitizeFileName(t){return t.replace(/[\\/:*?"<>|#]/g," ").replace(/\s+/g," ").trim().slice(0,80)||"clipped-link"}async ensureFolderExists(t){let e=(0,n.normalizePath)(t).split("/"),i=e.shift();if(!i)return;let a=i,s=this.app.vault;for(s.getAbstractFileByPath(a)||await s.createFolder(a);e.length;){let o=e.shift();if(!o)continue;a=`${a}/${o}`,s.getAbstractFileByPath(a)||await s.createFolder(a)}}async createClippingNote(t,e){let i=(0,n.normalizePath)(this.settings.clipFolder);await this.ensureFolderExists(i);let a=this.sanitizeFileName(t.title||t.url),s=0;for(;s<100;){let o=s===0?"":`-${s}`,l=(0,n.normalizePath)(`${i}/${a}${o}.md`),p=this.app.vault.getAbstractFileByPath(l);if(p instanceof n.TFile){try{if((await this.app.vault.read(p)).includes(t.url))return await this.app.vault.modify(p,e),l}catch(c){console.error("Daily Link Clipper could not read existing clip",c)}s+=1;continue}return await this.app.vault.create(l,e),l}throw new Error("Daily Link Clipper could not create a unique clipping note name.")}async appendToBase(t,e,i){let a={title:e.title,url:e.url,clippedNote:i,captured:(0,n.moment)().format(),status:t==="product"?"wishlist":"to-read"},s=t==="product"?this.settings.wishlistBasePath:this.settings.readingListBasePath,o=(0,n.normalizePath)(s),l=this.getParentFolder(o);l&&await this.ensureFolderExists(l);let p=this.app.vault.getAbstractFileByPath(o);if(!(p instanceof n.TFile)){let c=JSON.stringify({entries:[a]},null,2);await this.app.vault.create(o,`${c}
`);return}try{let c=await this.app.vault.read(p),h;try{h=JSON.parse(c)}catch(y){h={entries:[]}}Array.isArray(h.entries)||(h.entries=[]),h.entries.some(y=>y.url===a.url)||(h.entries.push(a),await this.app.vault.modify(p,`${JSON.stringify(h,null,2)}
`))}catch(c){console.error("Daily Link Clipper could not update base file",c)}}get pluginSettings(){return this.settings}},w=class extends n.PluginSettingTab{constructor(r,t){super(r,t),this.plugin=t}display(){let{containerEl:r}=this;r.empty(),r.createEl("h2",{text:"Daily Link Clipper"}),new n.Setting(r).setName("Daily folder").setDesc("Relative path that holds daily notes.").addText(t=>t.setPlaceholder("Daily").setValue(this.plugin.pluginSettings.dailyFolder).onChange(async e=>{this.plugin.pluginSettings.dailyFolder=e.trim()||"Daily",await this.plugin.saveSettings()})),new n.Setting(r).setName("Daily file date format").setDesc("Moment.js format for the daily file name.").addText(t=>t.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.pluginSettings.dailyFileDateFormat).onChange(async e=>{this.plugin.pluginSettings.dailyFileDateFormat=e.trim()||"YYYY-MM-DD",await this.plugin.saveSettings()})),new n.Setting(r).setName("Clip folder").setDesc("Folder where clipped notes should be stored.").addText(t=>t.setPlaceholder("Attachments/Clippings").setValue(this.plugin.pluginSettings.clipFolder).onChange(async e=>{this.plugin.pluginSettings.clipFolder=e.trim()||"Attachments/Clippings",await this.plugin.saveSettings()})),new n.Setting(r).setName("Wishlist base path").setDesc("File that stores JSON entries for products.").addText(t=>t.setPlaceholder("Bases/Wishlist.base").setValue(this.plugin.pluginSettings.wishlistBasePath).onChange(async e=>{this.plugin.pluginSettings.wishlistBasePath=e.trim()||"Bases/Wishlist.base",await this.plugin.saveSettings()})),new n.Setting(r).setName("Reading list base path").setDesc("File that stores JSON entries for articles.").addText(t=>t.setPlaceholder("Bases/ReadingList.base").setValue(this.plugin.pluginSettings.readingListBasePath).onChange(async e=>{this.plugin.pluginSettings.readingListBasePath=e.trim()||"Bases/ReadingList.base",await this.plugin.saveSettings()})),new n.Setting(r).setName("OpenRouter API key").setDesc("Stored locally. Required for model-based classification. Leave blank to use heuristics.").addText(t=>t.setPlaceholder("sk-or-...").setValue(this.plugin.pluginSettings.openRouterApiKey).onChange(async e=>{this.plugin.pluginSettings.openRouterApiKey=e.trim(),await this.plugin.saveSettings()})),new n.Setting(r).setName("OpenRouter key file path").setDesc("Optional absolute or vault-relative path to a file containing the API key. Tilde (~/) is supported.").addText(t=>t.setPlaceholder("~/secrets/openrouter.key").setValue(this.plugin.pluginSettings.openRouterKeyPath).onChange(async e=>{this.plugin.pluginSettings.openRouterKeyPath=e.trim(),await this.plugin.saveSettings()})),new n.Setting(r).setName("OpenRouter model").setDesc("Model identifier for classification requests.").addText(t=>t.setPlaceholder("anthropic/claude-3.5-sonnet").setValue(this.plugin.pluginSettings.openRouterModel).onChange(async e=>{this.plugin.pluginSettings.openRouterModel=e.trim()||"anthropic/claude-3.5-sonnet",await this.plugin.saveSettings()})),new n.Setting(r).setName("Fetch timeout (seconds)").setDesc("Maximum time to wait when downloading a page or calling OpenRouter.").addSlider(t=>t.setLimits(5,60,1).setValue(this.plugin.pluginSettings.fetchTimeoutSeconds).onChange(async e=>{this.plugin.pluginSettings.fetchTimeoutSeconds=e,await this.plugin.saveSettings()}).setDynamicTooltip()),new n.Setting(r).setName("Modify debounce (ms)").setDesc("Delay after edits before processing the daily note again.").addSlider(t=>t.setLimits(250,5e3,50).setValue(this.plugin.pluginSettings.modifyDebounceMs).onChange(async e=>{this.plugin.pluginSettings.modifyDebounceMs=e,await this.plugin.saveSettings()}).setDynamicTooltip()),new n.Setting(r).setName("Fallback classification").setDesc("Used when OpenRouter is unavailable and heuristics are inconclusive.").addDropdown(t=>t.addOption("article","Article").addOption("product","Product").setValue(this.plugin.pluginSettings.classificationFallback).onChange(async e=>{this.plugin.pluginSettings.classificationFallback=e,await this.plugin.saveSettings()}))}};
